<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Play.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIwSURBVGhD7dhbSxVRAMXxQxmFGNnF0LfA3kJE6QMIIUjYS2RqFyTxRhhqVBqhGFrfIIUQKUWD
        PoAkEj6JhYh466IRYgTim6SIT/Vfzdk9ijp7Zs6OWfDjjAdn9llzzszsmUScOHH+75Shylt0M2/xG99x
        W2+4mHpMQ0W+4SacyyE0YAYqsoRKOJfDuItZqMhnlMO5HEEj5qAii9AB71yO4h4WoCLzcPIbOYYmfIKK
        6CdWAeeSjhbo2FARHfQ34FwycB9foSI6Dd+CczmOB1iGikwh9AviueSrn5zAI+hCqCIfEdoU5SeavUXf
        OYk2aGqiIpO4g0CjgTq9RWs5jcdYgbb/AdUIJEEUMDmDJ1iF+WnVwGqCLGByFu34AY2ng70OVhJGAZNs
        dEDHncZ9Cd8Js4BJDsy9iGbBvhJFASULmxj8+5ePRFVA0ZX8hbd48ERVQGNqbN/T9LALXME4rI0bVoEC
        DEDj6XpwHVYSdAFdzJ5hG+toRRqsJcgCOkXqAYHG6MV5WE8QBUrxHtr2OxQjsNgskI9X0DZ1irQ2Xdgt
        NgqcQhe2sIPn0Iw0lPgtoL38BdrOG1xEqDlogcsYg9bXjcs1RJL9FshDP7TeGh5CjyYjy14LZOIpfkHr
        9CAXkWcvBWphHmqN4BJSJrsVKMEo9D96mGX9dtBGNLEa9hb/5QL6oA+uKUA39MQhJaO9b76FouTrRvK9
        IRQi5fMa+sDGBK7CqZi9r9c4ceLEsZFE4g+xsZc403fKhwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="Stop.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACCSURBVGhD7c+hDYAwEEDRjsIoDIDFMwoegUYxKtxRBO6bFvVfcsm14pJfJEl/WWK2unaR98+Y
        +Xk1NsZc7+Te2vf+mh+tGQAMIAYAA4gBwABiADCAGAAMIAYAA4gBwABiADCAGAAMIAYAA8gQ0zPge79L
        QJpijrp2kff3ukqSflHKDVK/q0B9EkDNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>