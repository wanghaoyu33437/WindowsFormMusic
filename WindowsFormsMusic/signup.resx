<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAALFJREFUOE+9
        kjEKAjEQRdPa23gFT2Fnoa1n8AKCrdcQ9iLaeAk7C7Gw9Az632ayaJINU/ngwWTz58NCwghLeZQ3k5lv
        Ljr5lns5N5lfkrsmO8nytD+VPCSZKjPJ8qY/1VlJMmQL1vIexyZkyBYc5CWOTciQ/SEtp8uW37kB/itd
        eGVngMMiji7Iugq2Zo674GTm/K/gbOa4CyZmTlFwldXXNQLZZxwjPApKaPXIO9BOCB9Q4UhRaO3+LQAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAPJJREFUOE+9
        kj0KwkAUhLcwu2hto5hN7ynsLLT1DF5AsPUaghfRxs4TCJtooSKWniG+SSZRMdGt/GAg834mCTxVhQvN
        MLFm6aw+Qtmz1Nj+ThyaVWx1Kpofre5DeJagO3ocq8ZFZoblpKvaLL0Rh/qCGdp3zlGrwzdPWPrgEJkR
        ZjDL0pODNWNpnmhrwQxmaZ/IPy7iMNjS1oIZzNLmFMtF85te57iefVZaNLwlO1zPA1yvMaD9CWa9ApwN
        phBtiXeA1NcQbcn/AhIbbCDaEu+Aa081dyLako+AxOp95XXVwKu90UqiHAVCkOoluYP8kJR6AOeqtysV
        vLN5AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAPdJREFUOE+V
        k6FuwlAYRlHzk2RIkKipJQjMHHaSB1gIAp6AR1hCkBMkewIEggkEFomYR5CQkJApXDmn6RVl3LY7yUnu
        /f7v0qa0tQh93OAx07VZJd4wwRN+Zbo2c1ZIGy1+Y8sgw7WZMztRJmjpOd3lMXNmJ8oaLcVwZifKB1p6
        SXd5zJzZifKKlnbpLo+ZMzuFhOewxc9M12ZDrEQPF+ghXWITS+ngFM8YDgd/cIaPeJcuXtDyHN/RO1HX
        Zs4O+OdvbmC40sAggrPQqxvIA67QsPRVhfCq+4xSxlh25VvCnYzc+KX94pObitj1zN6Nv+QX9184U0uu
        iR5IPS1ClyUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVFTd5l1d9P9dXfT/XV30/11d
        9P9dXfT/XV30/11d9P9dXfT/AwMJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATU3N1l1d9P9dXfT/XV30/11d
        9P9dXfT/XV30/11d9P9dXfT/XV30/11d9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1d9P9dXfT/XV30/11d
        9P9dXfT/XV30/11d9P9dXfT/XV30/11d9P9dXfT/XV30/11d9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdXfT/XV30/11d
        9P9dXfT/XV30/11d9P9dXfT/XV30/11d9P9dXfT/XV30/11d9P9dXfT/XV30/11d9P9dXfT/XV30/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV30/11d
        9P9dXfT/XV30/11d9P9dXfT/XV30/z4+oagAAAAAAAAAAAAAAAAfH1FVXV30/11d9P9dXfT/XV30/11d
        9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABdXfT/XV30/11d9P9dXfT/XV30/0dHu8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkXGF1d
        9P9dXfT/XV30/11d9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXV30/11d9P9dXfT/XV30/11d9P85OZadAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF1d9P9dXfT/XV30/11d9P9dXfT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABdXfT/XV30/11d9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKiptcl1d9P9dXfT/XV30/11d9P83N5CWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJSVhZl1d9P9dXfT/XV30/11d9P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV30/11d9P9dXfT/XV30/11d9P8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVd/pXV30/11d9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdXfT/XV30/11d9P9dXfT/XV30/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1d9P9dXfT/XV30/11d9P9dXfT/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD09n6ZdXfT/XV30/11d
        9P9dXfT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXV30/11d9P9dXfT/XV30/11d
        9P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDydpF1d
        9P9dXfT/XV30/11d9P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUVODqXV30/11d
        9P9dXfT/XV30/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        gwf//wAH//8AB//+AAP//gAP//8A////7/8=
</value>
  </data>
</root>